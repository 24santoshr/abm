<section class="col-md-6 col-md-offset-3">
	<h1>The ABM collections</h1>
	<p class="text-justify">The ABM collections contain real-world, open-source projects that can be used for
	   testing software tools and analyses.</p>
	<p class="text-justify">To create a collection, log in and start searching.</p>
	
	<!-- To retrieve an existing collection, TODO. // Keep this out for the moment. -->

	<p class="text-justify"><strong>Note</strong>​: The source code of each project should contain the precise licence information. If not, please
	   refer to the corresponding GitHub webpage.</p>
	
	<p class="text-justify">This website is developed and maintained by Henrik Niehaus.</p>

	<h2>Why was ABM created?</h2>
	<p class="text-justify">The ABM is a methodology designed to make benchmark creation and maintenance easier. By
	   creating this methodology, we wish to address the following concerns:</p>

	<ul>
		<li class="text-justify">Outdated benchmark suites: Well-established benchmark suites are often created by hand,
            and remain unchanged for years. As a result, analyses and tools are tested on outdated code,
            which is not representative of real-world software. By automatically constructing the
            collection, the code base can be regularly updated to provide up-to-date test projects.</li>
		<li class="text-justify">Analysis/tool scope: Benchmark suites are very general, and aim to cover many different
            types of software. On the other hand, analyses and tools are sometimes targeted at specific
            programs, such as Java web applications for example. Evaluating them on other types of
            software is insubstantial. When mining GitHub, the scope of the collection can be restricted
            to the target of the analysis/tool, and provide an adapted, yet still representative collection
            of up-to-date applications. The current collection targets Java web applications, and the
            same automated mining methodology can be applied to different types of target programs.</li>
	</ul>

	<p class="text-justify">For comparison and replication purposes, old versions of the collections are archived.</p>

	<h2>Can I contribute?</h2>
	<p class="text-justify">With the ABM methodology, we strive to create more dynamic, easily updatable benchmark suites
       that are adapted to the needs of different target domains. The overhead of this semi-automated
       methodology is the manual creation of the scripts and filters. We are happy to collect and share
       scripts and filters on this webpage. To submit your own ABM scripts, please contact us by email.

	<h2>Publications</h2>
	<p class="text-justify">Lisa Nguyen Quang Do, Michael Eichberg, and Eric Bodden. 2016. Toward an automated benchmark
       management system. In <i>​Proceedings of the 5th ACM SIGPLAN International Workshop on State Of the
       Art in Program Analysis​</i> (SOAP 2016). ACM, New York, NY, USA, 13-17. DOI:
       http://dx.doi.org/10.1145/2931021.2931023</p>
       
	<h2>Collection : Java business web applications</h2>
	<p class="text-justify">The first collection created for ABM can be found on the 
	   <a href="http://www.st.informatik.tu-darmstadt.de/artifacts/webapps/">​old webpage</a>​.
	   It was created on February 16th, 2016, contains 139 projects, and 100 executables.

    <h2>Contact information</h2>
    <p>Lisa Nguyen Quang Do (<a href="mailto:lisa.nguyen@iem.fraunhofer.de">lisa.nguyen@iem.fraunhofer.de</a>)<br />
       Michael Eichberg (<a href="mailto:eichberg@informatik.tu-darmstadt.de">eichberg@informatik.tu-darmstadt.de</a>)<br />
       Eric Bodden (<a href="mailto:eric.bodden@upb.de">eric.bodden@upb.de</a>)
    </p>
</section>
